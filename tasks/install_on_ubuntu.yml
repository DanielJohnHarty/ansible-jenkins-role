---
- name: Get Jenkins signature keyring
  get_url: 
    url: https://pkg.jenkins.io/debian-stable/jenkins.io.key 
    dest: /usr/share/keyrings/jenkins-keyring.asc

- name: Add jenkins repo to debian-stable repositories # https://www.jenkins.io/doc/book/installing/linux/#debianubuntu
  shell: |
    echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
      https://pkg.jenkins.io/debian-stable binary/ | tee \
      /etc/apt/sources.list.d/jenkins.list > /dev/null

- name: Install xz-utils
  apt:
    name: xz-utils
    state: present

- name: Install Jenkins
  apt:
    name: '{{ JENKINS_PACKAGE }}'
    state: present 
    update_cache: yes # apt update
    autoremove: yes # Remove unused dependencies
  register: task_result
  ignore_errors: yes # TODO Find a better way to deal with failures

- name: Update JENKINS_PORT if necessary
  blockinfile:
    path: /lib/systemd/system/jenkins.service
    block: |
      [Service]
      Environment="JENKINS_PORT={{ JENKINS_PORT }}"
    marker: "# ANSIBLE MANAGED BLOCK"
  when: JENKINS_PORT != 8080

- name: Check if correct JAVA already installed
  command: apt list --installed {{ JAVA_VERSION }}
  register: java_install_check

- name: Install Java 11
  apt:
    name: '{{ JAVA_VERSION }}'
    state: present
  when: |
    '{{ JAVA_VERSION }}' in java_install_check.stdout

- name: Enable Jenkins service
  ansible.builtin.service:
    name: jenkins
    enabled: yes

- name: Restart Jenkins service
  ansible.builtin.service:
    name: jenkins
    state: started

- name: Check if initialAdminPassword file exists
  stat:
    path: /var/lib/jenkins/secrets/initialAdminPassword
  register: initialAdminPassword_file

- name: Download initialAdminPassword
  fetch:
    src: /var/lib/jenkins/secrets/initialAdminPassword
    dest: ./files/
  when: initialAdminPassword_file.stat.exists
